{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","username","setUsername","accountType","setAccountType","onSubmit","e","preventDefault","console","log","JSON","stringify","type","name","value","onChange","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uKA2CeA,MAzCf,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACNC,EADM,KACIC,EADJ,OAEyBF,mBAAS,WAFlC,mBAENG,EAFM,KAEOC,EAFP,KAsBb,OACE,uBAAMC,SAnBa,SAACC,GAClBA,EAAEC,iBACFC,QAAQC,IAAI,2BACVC,KAAKC,UAAUV,GACf,IACAS,KAAKC,UAAUR,IACfD,EAAY,IACZE,EAAe,YAYnB,UACI,+CAEE,uBAAOQ,KAAK,OAAOC,KAAK,WAAWC,MAAOb,EAAUc,SAZnC,SAACT,GACxBJ,EAAYI,EAAEU,OAAOF,aAYT,uBACR,iDAEE,yBAAQD,KAAK,cAAcC,MAAOX,EAAaY,SAZ3B,SAACT,GAC3BF,EAAeE,EAAEU,OAAOF,QAWlB,UACE,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,QAAd,yBAEI,uBACR,wBAAQF,KAAK,SAAb,wBC1BOK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.a61291ec.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nfunction App() {\n  const [username, setUsername] = useState(\"\");\n  const [accountType, setAccountType] = useState('Student')\n\n  const handleSubmit = (e) => {\n      e.preventDefault();\n      console.log('The Form Was Submitted: ' + \n        JSON.stringify(username) + \n        ' ' + \n        JSON.stringify(accountType) )\n        setUsername(\"\")\n        setAccountType('Student')\n  };\n\n  const onUsernameChange = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const onAccountTypeChange = (e) => {\n    setAccountType(e.target.value);\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n        <label>\n          User Name: \n          <input type=\"text\" name=\"username\" value={username} onChange={onUsernameChange} />\n        </label><br />\n        <label>\n          Accout Type: \n          <select name=\"accountType\" value={accountType} onChange={onAccountTypeChange}>\n            <option value=\"Student\">Student</option>\n            <option value=\"Employee\">Employee</option>\n            <option value=\"Admin\">Admin</option>\n          </select>\n        </label><br />\n        <button type=\"submit\">Submit</button>\n    </form>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}